#VisualFreeBasic_Project#  Version=5.8.5
NumObjects=4
ProjectName=TestMB
CompilationMode=0
CompilationDebug=0
CharSet=1
CodePage=936
ProjectType=GUI
UseGDIPlus=1
ShowConsole=0
MultiLanguage=0
OmitInformation=0
StartupIcon=
UseWinXPthemes=-1
StrUnicode=0
UseAdminPriv=0
DeleteGeneratedCode=-1
Namespace=0
AddCompOps=
LastRunFilename=TestMB.exe
ImageManager=
Major=1
Minor=0
Revision=0
Build=0
FileMajor=1
FileMinor=0
FileRevision=0
FileBuild=70
AutoIncrement=-1
DefaultCompiler=32
Comments=
CompanyName=
FileDescription=
LegalCopyrights=
LegalTrademarks=
ProductName=

[Objects]
Form=.\forms\Form1.frm|79|4555||Yes|

TopTab=#FF_AppStart#|True|0|0|1619
#END_MAIN_PROPERTIES#

























[FF_APPSTART_START]
'************ 应用程序起始模块 ************
' 这里是打开软件后最初被执行代码的地方，此时软件内部还未初始化。（注：一般情况EXE包含DLL的，DLL先于EXE执行DLL自己的起始代码）
' 不管是EXE还是DLL，都从这里开始执行，然后到【程序入口函数】执行，整个软件结束或DLL被卸载就执行【程序出口】过程。(这里的EXE、DLL表示自己程序)
' 一般情况在这里写 DLL 声明、自定义声明、常量和#Include的包含文件。由于很多初始化代码未执行，这里不建议写用户代码。

#define UNICODE '表示WIN的API默认使用 W系列，宽字符处理，如果删除（使用ASCII字符）会造成控件和API使用的代码编写方式，影响深远。
#lang "FB"      '表示为标准FB格式
#include Once "windows.bi"      'WIN系统基础库，主要是WIN系统常用的API，不使用API可以不包含它。
#include Once "win/shlobj.bi"   'WIN系统对象库，shell32.dll的头文件，主要涉及shell及通用对话框等。
#include Once "afx/CWindow.inc" 'WinFBX 库，是WIN系统增强基础库，使用窗口和控件必须要用到它。
#include Once "vbcompat.bi"     '一些兼容VB的语句和常数，不包含就会无法使用它们了。
#include Once "fbthread.bi" 'VisualFreeBasic线程语句支持库，要用线程语句，就必须包含。


'以上 包含文件 会影响最终编译生成文件的大小，而不会影响运行效率，对于文件大小比较敏感的，可以根据需要调整。


enum mbWindowType
   MB_WINDOW_TYPE_POPUP
   MB_WINDOW_TYPE_TRANSPARENT
   MB_WINDOW_TYPE_CONTROL
End Enum

'MB_EXTERN_C __declspec(dllexport) void MB_CALL_TYPE mbInit(const mbSettings* settings);
Declare Sub mbInit Lib "mb" Alias "mbInit"(ByVal mbSettings As Long)

'ITERATOR0(void, mbUninit, "")
Declare Sub mbUninit Lib "mb" Alias "mbUninit"()

'ITERATOR6(mbWebView, mbCreateWebWindow, mbWindowType type, HWND parent, int x, int y, int width, int height, "") \
Declare Function mbCreateWebWindow Lib "mb" Alias "mbCreateWebWindow"(ByVal mbWindowType As Long ,ByVal parent As Long ,ByVal x As Long ,ByVal y As Long ,ByVal width As Long ,ByVal height As Long) As Long

'ITERATOR2(void, mbShowWindow, mbWebView webview, BOOL show, "") \
Declare Sub mbShowWindow Lib "mb" Alias "mbShowWindow"(ByVal mbWebView As Long ,ByVal show As Long)

'ITERATOR2(void, mbLoadURL, mbWebView webView, const utf8* url, "") \
Declare Sub mbLoadURL Lib "mb" Alias "mbLoadURL"(ByVal mbWebView As Long , url_utf8 As ZString Ptr)

'ITERATOR3(void, mbResize, mbWebView webView, int w, int h, "") \
Declare Sub mbResize Lib "mb" Alias "mbResize"(ByVal mbWebView As Long ,ByVal Width As Long ,ByVal height As Long)

'ITERATOR3(void, mbGetCookie, mbWebView webView, mbGetCookieCallback callback, void* param, "") \
Declare Sub mbGetCookie Lib "mb" Alias "mbGetCookie"(ByVal mbWebView As Long ,ByVal callback As Any Ptr, ByVal param As lParam)

'void mbStopLoading(mbWebView webView)
Declare Sub mbStopLoading Lib "mb" Alias "mbStopLoading"(ByVal mbWebView As Long)

'ITERATOR3(void, mbOnDownloadInBlinkThread, mbWebView webView, mbDownloadInBlinkThreadCallback callback, void* param, "") \
Declare Sub mbOnDownloadInBlinkThread Lib "mb" Alias "mbOnDownloadInBlinkThread"(ByVal mbWebView As Long ,ByVal callback As Any Ptr, ByVal param As lParam)

'ITERATOR9(mbDownloadOpt, mbPopupDialogAndDownload, mbWebView webView, VOID* param, size_t contentLength, const CHAR* url, \
'    const CHAR* mime, const CHAR* disposition, mbNetJob job, mbNetJobDataBind* dataBind, mbDownloadBind* callbackBind, "") \
Declare Function mbPopupDialogAndDownload Lib "mb" Alias "mbPopupDialogAndDownload"(mbWebView As Long, param As lParam ,expectedContentLength As Long ,url_utf8 As ZString ,mime_utf8 As ZString ,disposition_utf8 As ZString, job As Any Ptr, dataBind As Any Ptr, callbackBind As Any Ptr) As Long 

'停止加载页面
'bool mbReload(mbWebView webView)
Declare Sub mbReload Lib "mb" Alias "mbReload"(ByVal mbWebView As Long)

[FF_APPSTART_END]
[FF_WINMAIN_START]
Function FF_WINMAIN(ByVal hInstance As HINSTANCE) As Long '程序入口函数
   'hInstance EXE或DLL的模块句柄，就是在内存中的地址，EXE 通常固定为 &H400000  DLL 一般不固定 
   '编译为 LIB静态库时，这里是无任何用处 
   ' -------------------------------------------------------------------------------------------
   '  DLL 例题 ********  函数无需返回值
   '  DLL被加载到内存时，不要执行太耗时间的代码，若需要耗时就用多线程。
   '        AfxMsg "DLL被加载到内存时"
   ' -------------------------------------------------------------------------------------------
   '  EXE 例题 ********   
   '        AfxMsg "EXE刚启动"
   ' 如果这个函数返回TRUE（非零），将会结束该软件。如果没有启动窗口，那么此函数过后，也会终止软件。
   ' 您可以在此函数做程序初始化。
   ' -------------------------------------------------------------------------------------------
   ' (这里的EXE、DLL表示自己程序，无法获取其它EXE、DLL入口和出口)

   Function = False   
End Function

Sub FF_WINEND(ByVal hInstance As HINSTANCE) '程序出口，程序终止后的最后代码。
   'hInstance EXE或DLL的模块句柄，就是在内存中的地址，EXE 通常固定为 &H400000  DLL 一般不固定 
   '编译为 LIB静态库时，这里是无任何用处 
   ' -------------------------------------------------------------------------------------------
   '  DLL 例题 ********    
   '    卸载DLL，DLL被卸载，需要快速完成，不能用进程锁。
   '    AfxMsg "DLL被卸载时" 
   ' -------------------------------------------------------------------------------------------
   '  EXE 例题 ********   
   '   程序即将结束，这里是最后要执行的代码，（：无法停止被退出的命运。
   '      AfxMsg "EXE退出"
   ' -------------------------------------------------------------------------------------------
   ' (这里的EXE、DLL表示自己程序，无法获取其它EXE、DLL入口和出口)

End Sub


[FF_WINMAIN_END]
[FF_PUMPHOOK_START]
Function FF_PUMPHOOK( uMsg As Msg ) As Long '消息钩子
   '所有窗口消息都经过这里，你可以在这里拦截消息。

   ' 如果这个函数返回 FALSE（零），那么 VisualFreeBasic 消息泵将继续进行。
   ' 返回 TRUE（非零）将绕过消息泵（屏蔽消息），就是吃掉这消息不给窗口和控件处理。
   ' 

   Function = False    '如果你需要屏蔽消息，返回 TRUE 。

End Function


[FF_PUMPHOOK_END]

